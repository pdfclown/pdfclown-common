<template name="test-param-pdfclown" value="@org.junit.jupiter.params.ParameterizedTest&#10;@org.junit.jupiter.params.provider.MethodSource&#10;void $METHOD_NAME$(org.pdfclown.common.build.test.assertion.Assertions.Expected&lt;$RESULT_TYPE$&gt; expected&#10;    // TODO: add here the parameters corresponding to the ARGUMENTS consumed by&#10;    //       the tested method.&#10;    // %Type0% arg0,&#10;    // %Type1% arg1,&#10;    // ...&#10;    ) {&#10;  org.pdfclown.common.build.test.assertion.Assertions.assertParameterizedOf(&#10;      // TODO: replace `null` with the call to the tested method.&#10;      () -&gt; null,&#10;      expected,&#10;      () -&gt; new org.pdfclown.common.build.test.assertion.Assertions.ExpectedGeneration(java.util.List.of(&#10;          // TODO: define an entry for each of the ARGUMENTS passed to the&#10;          //       tested method.&#10;          // org.pdfclown.common.util.Aggregations.entry(&quot;arg0&quot;, arg0),&#10;          // org.pdfclown.common.util.Aggregations.entry(&quot;arg1&quot;, arg1),&#10;          // ...&#10;      )));&#10;}&#10;&#10;static java.util.stream.Stream&lt;org.junit.jupiter.params.provider.Arguments&gt; $METHOD_NAME$() {&#10;  return org.pdfclown.common.build.test.assertion.Assertions.argumentsStream(&#10;      // TODO: if you need simple sets of arguments instead of their Cartesian&#10;      //       product, use simple() instead of cartesian()&#10;      org.pdfclown.common.build.test.assertion.Assertions.ArgumentsStreamConfig.cartesian(),&#10;      // TODO: `null` will cause Assertions to generate the source code of the&#10;      //       expected results of the tested method (see argumentsStream(..)&#10;      //       for more information); once run, replace it with the generated&#10;      //       expected results.&#10;      null,&#10;      // TODO: add here the lists of argument values for the respective ARGUMENTS&#10;      //       consumed by the tested method; change the comment labels according&#10;      //       to the respective argument name.&#10;      // arg0&#10;      java.util.Arrays.asList()&#10;      // ,&#10;      // // arg1&#10;      // java.util.Arrays.asList(),&#10;      // ...&#10;  );&#10;}" description="JUnit 5 parameterized test method based on pdfClown common assertion" toReformat="false" toShortenFQNames="true" useStaticImport="true">
    <variable name="METHOD_NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="RESULT_TYPE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
        <option name="JAVA_DECLARATION" value="true" />
    </context>
</template>